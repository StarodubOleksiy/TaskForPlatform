<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>WebAutomation_AllureParallel</groupId>
	<artifactId>WebAppllWDM</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>WebAutomation_Parallel</name>


	<!-- To Ask Maven complier to Use JDK 1.8 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<compiler.version>1.8</compiler.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<selenium.version>4.0.0-alpha-4</selenium.version>
		<allure.version>RELEASE</allure.version>
		<aspectj.version>1.8.10</aspectj.version>
		<apachepoi.version>3.13</apachepoi.version>
		<slf4j.version>1.7.24</slf4j.version>

	</properties>

	<!-- All the Dependencies Added Here -->
	<dependencies>


		<!-- TestNG Dependency -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.11</version>
		</dependency>


		<!-- Webdriver Manager Dependency -->

		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>3.8.1</version>
		</dependency>

		<dependency>
			<groupId>com.crossbrowsertesting</groupId>
			<artifactId>CBT_Helper</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.141.59</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<version>${selenium.version}</version>
		</dependency>


		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>21.0</version>
		</dependency>


		<!-- YANDEX QATools Properties Dependancy -->
		<dependency>
			<groupId>ru.yandex.qatools.properties</groupId>
			<artifactId>properties-loader</artifactId>
			<version>1.5</version>
		</dependency>


		<!-- AShot Dependancy -->
		<dependency>
			<groupId>ru.yandex.qatools.ashot</groupId>
			<artifactId>ashot</artifactId>
			<version>1.5.4</version>
		</dependency>


		<!-- Hamcrest Dependancy -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
		</dependency>


		<!-- Allure Java Annotations Dependancy -->
		<dependency>
			<groupId>ru.yandex.qatools.allure</groupId>
			<artifactId>allure-java-annotations</artifactId>
			<version>${allure.version}</version>
		</dependency>


		<!-- Allure Java Properties Dependancy -->
		<dependency>
			<groupId>ru.qatools.commons</groupId>
			<artifactId>properties</artifactId>
			<version>2.0.RC6</version>
		</dependency>

		<!-- Allure TestNG Adapter -->
		<dependency>
			<groupId>ru.yandex.qatools.allure</groupId>
			<artifactId>allure-testng-adaptor</artifactId>
			<version>${allure.version}</version>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<!-- HTML Elements from QA Tools to setup Page Object Model -->
		<dependency>
			<groupId>ru.yandex.qatools.htmlelements</groupId>
			<artifactId>htmlelements-java</artifactId>
			<version>1.17</version>
		</dependency>


		<!-- Joda Date-Time Dependency -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9.7</version>
		</dependency>


		<!-- Apache POI Dependancy -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${apachepoi.version}</version>
		</dependency>


		<!-- Apache POI-OOXML Dependancy -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${apachepoi.version}</version>
		</dependency>


		<!-- Apache POI-OOXML SCHEMAS Dependancy -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>${apachepoi.version}</version>
		</dependency>


		<!-- Apache OOXML SCHEMAS Dependancy -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>ooxml-schemas</artifactId>
			<version>1.3</version>
		</dependency>


		<!-- Apache XML BEANS Dependancy -->
		<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
			<version>2.6.0</version>
		</dependency>


		<!-- ASPECTJ Tools Dependancy -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>${aspectj.version}</version>
		</dependency>


		<!-- ASPECTJ Run Time Dependancy -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>


		<!-- SLF4J API Dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- SLF4J Log4j Dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- SLF4J jull-2-SLL4J Dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- SLF4J jcl-over-SL4J Dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- Automation Remarks Video Recorder TestNG Dependency -->
		<dependency>
			<groupId>com.automation-remarks</groupId>
			<artifactId>video-recorder-testng</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Java Faker to create fake data -->
		<dependency>
			<groupId>com.github.javafaker</groupId>
			<artifactId>javafaker</artifactId>
			<version>0.16</version>
		</dependency>




	</dependencies>

	<build>
		<plugins>
			<!-- Apache Maven SureFire Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20</version>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>testng.xml</suiteXmlFile>
					</suiteXmlFiles>
					<argLine>-javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar</argLine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjweaver</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!--Needed only to show reports locally. Run jetty:run and open localhost:8080 
				to show the report -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.0.v20161208</version>
				<configuration>
					<webAppSourceDirectory>${project.build.directory}/site/allure-maven-plugin</webAppSourceDirectory>
					<stopKey>stop</stopKey>
					<stopPort>1234</stopPort>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.qameta.allure</groupId>
				<artifactId>allure-maven</artifactId>
				<version>2.8</version>
			</plugin>
		</plugins>
	</build>

	<!-- Allure Reporting Plugin -->
	<reporting>
		<excludeDefaults>true</excludeDefaults>
		<plugins>
			<plugin>
				<groupId>io.qameta.allure</groupId>
				<artifactId>allure-maven</artifactId>
				<version>2.8</version>
				<configuration>
					<reportVersion>${allure.version}</reportVersion>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
	